<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- ====================================================================== -->
    <!-- P R O J E C T    D E S C R I P T I O N                                 -->
    <!-- ====================================================================== -->

    <groupId>aem-test-session-close</groupId>
    <artifactId>aem-test-session-close</artifactId>
    <packaging>content-package</packaging>
    <name>aem-test-session-close</name>
    <description>aem-test-session-close</description>
    <version>0.0.1</version>

    <developers>
        <developer>
            <email>max@aem.design</email>
            <name>Max Barrass</name>
        </developer>
    </developers>


    <!-- ====================================================================== -->
    <!-- P R O P E R T I E S                                                    -->
    <!-- ====================================================================== -->
    <properties>
        <crx.host>localhost</crx.host>
        <crx.port>4502</crx.port>
        <crx.username>admin</crx.username>
        <crx.password>admin</crx.password>
        <crx.package.path>/etc/packages</crx.package.path>
        <nexus.host>192.168.27.2</nexus.host>
        <nexus.port>8081</nexus.port>
        <publish.crx.host>192.168.27.2</publish.crx.host>
        <publish.crx.port>4503</publish.crx.port>
        <publish.crx.username>admin</publish.crx.username>
        <publish.crx.password>admin</publish.crx.password>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <package.group>${project.parent.groupId}</package.group>
        <package.groupTitle>AEM.Design</package.groupTitle>
        <package.createdBy>devops@aem.design</package.createdBy>
        <package.builtWith>maven</package.builtWith>
        <package.testedWith>AEM6.3</package.testedWith>
        <package.providerName>AEM.Design</package.providerName>
        <package.providerUrl>http://aem.design</package.providerUrl>
        <package.appFolder>aemdesign</package.appFolder>
        <package.contentFolder>aemdesign</package.contentFolder>
        <package.confFolder>aemdesign</package.confFolder>
        <package.clientLibsFolder>aemdesign</package.clientLibsFolder>
        <package.classNamespace>aemdesign</package.classNamespace>
        <package.uploadProtocol>http</package.uploadProtocol>
        <aem.verison>6.3</aem.verison>
        <buildNumber>0</buildNumber>
    </properties>

    <scm>
        <connection>scm:git:ssh://git@github.com:wildone/aem-test-session-close.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:wildone/aem-test-session-close.git</developerConnection>
        <url>https://github.com/wildone/aem-test-session-close.git</url>
        <tag>v0.0.0</tag>
    </scm>

    <repositories>
        <repository>
            <id>adobe-public-releases</id>
            <name>Adobe Public Repository</name>
            <url>https://repo.adobe.com/nexus/content/groups/public/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>central maven</id>
            <url>http://central.maven.org/maven2/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>adobe-public-releases</id>
            <name>Adobe Public Repository</name>
            <url>https://repo.adobe.com/nexus/content/groups/public/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>central maven</id>
            <url>http://central.maven.org/maven2/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- ====================================================================== -->
    <!-- B U I L D    D E F I N I T I O N                                       -->
    <!-- ====================================================================== -->
    <build>
        <resources>
        <!-- define the resources that will go into the package -->
            <resource>
                <directory>src/main/content/jcr_root</directory>
                <filtering>false</filtering>
                <excludes>
                    <!-- exclude .vlt control files in the package -->
                    <exclude>**/.vlt</exclude>
                    <exclude>**/.vltignore</exclude>
                    <exclude>**/.gitignore</exclude>
                    <exclude>**/*.iml</exclude>
                    <exclude>**/.classpath</exclude>
                    <exclude>**/.project</exclude>
                    <exclude>**/.settings</exclude>
                    <exclude>**/.DS_Store</exclude>
                    <exclude>**/target/**</exclude>
                    <exclude>**/pom.xml</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
        <!--
            we want to keep some of the META-INF files and not configure
            everything in the plugin (mainly the filters).

            copy the resource explicitly instead of attaching it to the default resources
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <!-- ensure that the empty directories are copied -->
                <configuration>
                    <includeEmptyDirs>true</includeEmptyDirs>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-metainf-vault-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/vault-work/META-INF</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/content/META-INF</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- ====================================================================== -->
            <!-- V A U L T    P A C K A G E    P L U G I N                              -->
            <!-- ====================================================================== -->
            <plugin>
                <groupId>com.day.jcr.vault</groupId>
                <artifactId>content-package-maven-plugin</artifactId>
                <version>0.5.24</version>
                <extensions>true</extensions>
                <configuration>
                    <group>${package.group}</group>
                    <filterSource>src/main/content/META-INF/vault/filter.xml</filterSource>
                    <targetURL>${package.uploadProtocol}://${crx.host}:${crx.port}/crx/packmgr/service.jsp</targetURL>
                    <properties>
                        <description>${project.description}</description>
                        <created>${buildNumber}</created>
                        <createdBy>${package.createdBy}</createdBy>
                        <acHandling>merge_preserve</acHandling>
                    </properties>
                    <!-- embedded dependencies in the content package -->
                    <embeddeds>
                    </embeddeds>
                    <dependencies></dependencies>
                </configuration>
            </plugin>
            <!-- use the buildnumber plugin to generate a ISO8601 timestamp -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <format>{0,date,yyyyMMdd}</format>
                    <items>
                        <item>timestamp</item>
                    </items>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <inherited>true</inherited>
                <configuration>
                    <attach>false</attach>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.5.1</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <serverId>privateregistry</serverId>
                    <skipStaging>true</skipStaging>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- ====================================================================== -->
    <!-- P R O F I L E S                                                        -->
    <!-- ====================================================================== -->
    <profiles>
        <profile>
            <id>autoInstallPackage</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.day.jcr.vault</groupId>
                        <artifactId>content-package-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-content-package</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <targetURL>${package.uploadProtocol}://${crx.host}:${crx.port}/crx/packmgr/service.jsp</targetURL>
                                    <userId>${crx.username}</userId>
                                    <password>${crx.password}</password>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <id>turnoffdamworkflow</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- turn off DAM Assets Workflow Launcher -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2</version>
                        <executions>
                            <execution>
                                <id>turn off dam workflow create</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>curl</executable>
                                    <arguments>
                                        <argument>-u</argument>
                                        <argument>${crx.username}:${crx.password}</argument>
                                        <argument>-H</argument>
                                        <argument>User-Agent:curl</argument>
                                        <argument>-H</argument>
                                        <argument>Referer:${package.uploadProtocol}://${crx.host}:${crx.port}</argument>
                                        <argument>-X</argument>
                                        <argument>POST</argument>
                                        <argument>-F</argument>
                                        <argument>enabled=false</argument>
                                        <argument>${package.uploadProtocol}://${crx.host}:${crx.port}/libs/settings/workflow/launcher/config/update_asset_create</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>turn off dam workflow modify</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>curl</executable>
                                    <arguments>
                                        <argument>-u</argument>
                                        <argument>${crx.username}:${crx.password}</argument>
                                        <argument>-H</argument>
                                        <argument>User-Agent:curl</argument>
                                        <argument>-H</argument>
                                        <argument>Referer:${package.uploadProtocol}://${crx.host}:${crx.port}</argument>
                                        <argument>-X</argument>
                                        <argument>POST</argument>
                                        <argument>-F</argument>
                                        <argument>enabled=false</argument>
                                        <argument>${package.uploadProtocol}://${crx.host}:${crx.port}/libs/settings/workflow/launcher/config/update_asset_mod</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>turnondamworkflow</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- turn on DAM Assets Workflow Launcher -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2</version>
                        <executions>
                            <execution>
                                <id>turn on dam workflow create</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>curl</executable>
                                    <arguments>
                                        <argument>-u</argument>
                                        <argument>${crx.username}:${crx.password}</argument>
                                        <argument>-H</argument>
                                        <argument>User-Agent:curl</argument>
                                        <argument>-H</argument>
                                        <argument>Referer:${package.uploadProtocol}://${crx.host}:${crx.port}</argument>
                                        <argument>-X</argument>
                                        <argument>POST</argument>
                                        <argument>-F</argument>
                                        <argument>enabled=true</argument>
                                        <argument>${package.uploadProtocol}://${crx.host}:${crx.port}/libs/settings/workflow/launcher/config/update_asset_create</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>turn on dam workflow modify</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>curl</executable>
                                    <arguments>
                                        <argument>-u</argument>
                                        <argument>${crx.username}:${crx.password}</argument>
                                        <argument>-H</argument>
                                        <argument>User-Agent:curl</argument>
                                        <argument>-H</argument>
                                        <argument>Referer:${package.uploadProtocol}://${crx.host}:${crx.port}</argument>
                                        <argument>-X</argument>
                                        <argument>POST</argument>
                                        <argument>-F</argument>
                                        <argument>enabled=true</argument>
                                        <argument>${package.uploadProtocol}://${crx.host}:${crx.port}/libs/settings/workflow/launcher/config/update_asset_mod</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
